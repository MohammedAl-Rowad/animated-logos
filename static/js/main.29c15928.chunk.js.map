{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","clouds","staggerVisualizerEl","document","querySelector","appendChild","fragment","createDocumentFragment","grid","waterGrids","this","getRange","filter","n","includes","numberOfElements","i","div","createElement","cla","classList","add","anime","timeline","targets","easing","delay","stagger","loop","autoplay","rotate","from","direction","translateX","translateY","scale","axis","random","duration","play","length","start","cloudsNumber","newStart","newLength","arr","Array","map","slice","className","Component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.29c15928.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport anime from 'animejs';\nimport './App.scss';\n\nexport default class App extends Component {\n  private clouds: Array<number> = [];\n\n  componentDidMount(): void {\n    const staggerVisualizerEl = document.querySelector(\n      '.stagger-visualizer'\n    ) || { appendChild: () => void 1 };\n\n    const fragment = document.createDocumentFragment();\n    const grid = [20, 17];\n    const waterGrids = [\n      ...this.getRange(13, 325, 2),\n      ...this.getRange(11, 309, 3),\n      ...this.getRange(9, 293, 4),\n      ...this.getRange(7, 277, 5),\n      ...this.getRange(5, 261, 6),\n      ...this.getRange(3, 245, 7),\n      ...this.getRange(1, 229, 8)\n    ];\n    this.clouds = [\n      ...this.clouds,\n      208,\n      209,\n      210,\n      211,\n      212,\n      213,\n      214,\n      215,\n      216,\n      192,\n      193,\n      194,\n      195,\n      196,\n      197,\n      198,\n      176,\n      177,\n      178,\n      179,\n      180\n    ].filter(\n      n =>\n        ![\n          206,\n          289,\n          272,\n          255,\n          238,\n          221,\n          222,\n          239,\n          223,\n          305,\n          288,\n          271,\n          254,\n          237,\n          253,\n          236,\n          235\n        ].includes(n)\n    );\n    const [col, row] = grid;\n    const numberOfElements = col * row;\n    for (let i = 0; i < numberOfElements; i++) {\n      const div = document.createElement('div');\n      // div.addEventListener('click', () => alert(i));\n      let cla: string = '';\n      if (this.clouds.includes(i)) {\n        cla = 'clouds';\n      } else if (waterGrids.includes(i)) {\n        cla = 'water';\n      } else {\n        cla = 'logo-bg';\n      }\n      div.classList.add(cla);\n      fragment.appendChild(div);\n    }\n    staggerVisualizerEl.appendChild(fragment);\n    const staggersAnimation = anime\n      .timeline({\n        targets: '.stagger-visualizer div',\n        // scale: [\n        //   { value: 0.1, easing: 'easeOutSine', duration: 500 },\n        //   { value: 1, easing: 'easeInOutQuad', duration: 1200 }\n        // ],\n        easing: 'easeInOutSine',\n        delay: anime.stagger(50),\n        loop: true,\n        autoplay: false\n        // delay: anime.stagger(200, { grid: [14, 5], from: 'center' }),\n        // loop: true\n      })\n      // .add({\n      //   scale: anime.stagger([2.5, 1], { from: 'center', grid: [9, 9] }),\n      //   translateX: anime.stagger([-100, 100]),\n      //   rotate: anime.stagger([-45, 45]),\n      //   easing: 'easeInOutCirc',\n      //   delay: anime.stagger(10, { from: 'center' })\n      // })\n      // .add({\n      //   scale: anime.stagger([2.5, 1], {\n      //     from: 'center',\n      //     easing: 'easeInOutCirc'\n      //   }),\n      //   translateX: anime.stagger([-200, 200]),\n      //   translateY: anime.stagger([-200, 200]),\n      //   rotate: 0,\n      //   delay: anime.stagger(1, { from: 'last' })\n      // })\n      .add({\n        rotate: anime.stagger(2, {\n          from: 'center',\n          direction: 'reverse',\n          easing: 'easeInSine'\n        }),\n        translateX: 0,\n        translateY: 0,\n        delay: anime.stagger(10, { from: 'center' })\n      })\n      .add({\n        scale: anime.stagger([2, 1], { grid: [9, 9], axis: 'y' }),\n        translateY: anime.stagger([-100, 200], { grid: [9, 9], axis: 'y' }),\n        rotate: 0,\n        delay: anime.stagger(1, { from: 'last' })\n      })\n      .add({\n        translateX: () => anime.random(-100, 100),\n        translateY: () => anime.random(-100, 100),\n        scale: anime.stagger([1.5, 0.5], { from: 'center' }),\n        rotate: anime.stagger([10, -10], { from: 'last' }),\n        delay: anime.stagger(50, { from: 'center', grid: [9, 9] })\n      })\n      .add({\n        translateX: () => anime.random(-100, 100),\n        translateY: () => anime.random(-100, 100),\n        rotate: anime.stagger([-10, 10], { from: 'last' }),\n        scale: 1,\n        delay: anime.stagger(50, { from: 'center', grid: [9, 9] })\n      })\n      .add({\n        translateX: 0,\n        translateY: anime.stagger(6, { from: 'center', direction: 'reverse' }),\n        rotate: 0,\n        delay: anime.stagger(50, { from: 'center', grid: [9, 9] })\n      })\n      .add({\n        translateX: anime.stagger('1rem', {\n          grid: [9, 9],\n          from: 'center',\n          axis: 'x'\n        }),\n        //translateY: anime.stagger('1rem', {grid: [9, 9], from: 'center', axis: 'y'}),\n        delay: anime.stagger(200, {\n          grid: [9, 9],\n          from: 'center',\n          direction: 'reverse'\n        })\n      })\n      .add({\n        translateX: anime.stagger([25, -25], { from: 'first' }),\n        translateY: 0,\n        rotate: anime.stagger([40, -40], { from: 'first' }),\n        delay: anime.stagger(10, { from: 'first' })\n      })\n      .add({\n        translateY: anime.stagger([-240, 240]),\n        rotate: () => anime.random(-100, 100),\n        scale: anime.stagger([1, 3], { from: 'center' }),\n        delay: anime.stagger(10, { from: 0 })\n      })\n      .add({\n        translateX: 0,\n        translateY: 0,\n        scale: 1,\n        rotate: 360,\n        duration: 2000,\n        delay: 0\n      });\n    staggersAnimation.play();\n  }\n\n  private getRange(\n    length: number,\n    start: number,\n    cloudsNumber: number\n  ): Array<number> {\n    const newStart = start - cloudsNumber;\n    const newLength = length + cloudsNumber * 2;\n    let arr = Array.from<number>({ length: newLength }).map(\n      (n: number = newStart, i: number) => (i === 0 ? n : n + i)\n    );\n    this.clouds = [\n      ...this.clouds,\n      ...arr.slice(0, cloudsNumber),\n      ...arr.slice(arr.length - cloudsNumber, arr.length)\n    ];\n\n    arr = arr.slice(cloudsNumber, length + cloudsNumber);\n    return arr;\n  }\n\n  render() {\n    return <div className=\"stagger-visualizer\"></div>;\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}